// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  landlord
  caretaker
  tenant
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role
  actiToken String?
  actiTokenExpiredAt DateTime?
  createdAt DateTime @default(now())
  activatedAt DateTime?

  properties Property[]
  leases     Lease[]
}

model PasswordReset {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresIn DateTime
  createdAt DateTime @default(now())
}

enum MailStatus {
  pending
  sent
  failed
  cancelled
}

model Mail {
  id        String     @id @default(uuid())
  to        String
  from      String
  subject   String
  content   String
  status    MailStatus @default(pending)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt()
}

model Property {
  id        String       @id @default(uuid())
  name      String
  address   String
  type      PropType
  owner     User         @relation(fields: [ownerId], references: [id])
  ownerId   String
  categoryId String 
  category  Category @relation(fields: [categoryId], references: [id])
  country   String
  state     String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  units     Unit[]
}

enum RentPaymentCycle {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

model Unit {
  id           String           @id @default(uuid())
  property     Property         @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId   String
  name         String
  type         UnitType
  rentPrice    Float
  rentDuration Int //inDays
  rentCycle    RentPaymentCycle @default(YEARLY)
  availability Availability     @default(AVAILABLE)
  parentUnit   Unit?            @relation("ParentChild", fields: [parentUnitId], references: [id], onDelete: Cascade)
  parentUnitId String?
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt

  subUnits Unit[]  @relation("ParentChild")
  leases   Lease[]
  images Image[]
}

model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Property Property[]
}

model Image {
  id        String @id @default(uuid())
  unitId    String
  image     String
  thumb     String
  createdAt DateTime @default(now())
  unit       Unit      @relation(fields: [unitId], references: [id], onDelete: Cascade)
}

model Lease {
  id         String    @id @default(uuid())
  unit       Unit      @relation(fields: [unitId], references: [id])
  unitId     String
  tenant     User      @relation(fields: [tenantId], references: [id])
  tenantId   String
  startDate  DateTime
  endDate    DateTime?
  rentAmount Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum PropType {
  HOUSE
  APARTMENT_COMPLEX
}

enum UnitType {
  ENTIRE_PROPERTY
  APARTMENT
  ROOM
}

enum Availability {
  AVAILABLE
  RENTED
}
